module util/src-gen

imports

  libstrc
  
rules

  /** Create a file in src-gen folder based on a module name
   * @param project-path   Project path
   * @param folder         Sub-folder in src-gen
   * @param ext            File extension
   * @input                Module name
   * @output               Filename in src-gen
   */
  create-src-gen(|project-path, folder, ext):
    filename -> filename'
  with
    fn := <get-filename> filename; 
    src-gen-path := <concat-strings; create-dir> [project-path, "/src-gen"];
    src-gen-folder := <concat-strings; create-dir> [src-gen-path, "/" ,folder];
    file-folder := <get-dir(|src-gen-folder)> filename ;
    filename' := <concat-strings> [file-folder, "/" , fn, ext]

  get-filename:
    s -> s'
    with
      names := <strip-annos; string-tokenize(|['/'])> s;
      s' := <last> names

  get-dir(|path) :
    s -> s'
    with
      names := <strip-annos; string-tokenize(|['/'])> s;
      names' := <at-last(![])> names;
      if [h | tl] := names' then
        first := <concat-strings> [path, "/" ,h]; 
        <create-dirs(|first)> tl;
        s' := <concat-strings> [path, "/",  <separate-by(|"/"); concat-strings> names']
      else
        s' := path
      end

  create-dirs(|dir):
    [h | tl] -> None()
    where
      <create-dir> dir;
      new-dir := <concat-strings> [dir, "/", h];
      <create-dirs(|new-dir)> tl

  create-dirs(|dir):
    [] -> None()
    where
      <create-dir> dir
      
  create-dir = not( file-exists ; filemode ; isdir) < mkdir + id
 